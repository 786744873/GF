@model CommonService.Model.CustomerForm.F_FormProperty
@section HeadCss
{
    <style type="text/css">
        
    </style>
}
@{
    Layout = "~/Views/Shared/_EditDialogFormTemplate.cshtml";//带表单提交的编辑页面固定模板
}
@{
    ViewBag.Title = "表单属性";
}
@{
    List<CommonService.Model.C_Parameters> UIControlTypes = ViewBag.UIControlTypes;
    List<CommonService.Model.C_Parameters> TriggerEventTypes = ViewBag.TriggerEventTypes;
}
@section HeadScript{
    <script type="text/javascript">
        document.onkeyup = function (e) {      //onkeyup是javascript的一个事件、当按下某个键弹起 var _key; //的时触发 
            if (e == null) { // ie  
                _key = event.keyCode;
            } else { // firefox              //获取你按下键的keyCode  
                _key = e.which;          //每个键的keyCode是不一样的  
            }
            if (_key == 13) {   //判断keyCode是否是13，也就是回车键(回车的keyCode是13)  
                onlySaveForm(document.getElementById('btnSave'));
            }
        }
    </script>
}
<div class="formbody">
    <div class="formtitle"><span>基本信息</span></div>
    <ul class="forminfo">
        @using (Html.BeginForm("Save", "FormProperty", FormMethod.Post, new { id = "formFormProperty", onsubmit = "return validateCallback(this,dialogAjaxDone);" }))
        {
            @Html.Hidden("formOperateType")//表单操作类型：固定写法，只是保存，值为'onlySave';保存并且新增，值为'saveAndNewNext'
            @Html.Hidden("F_FormProperty_id", Model.F_FormProperty_id)
            @Html.Hidden("F_FormProperty_code", Model.F_FormProperty_code)
            @Html.Hidden("F_FormProperty_form", Model.F_FormProperty_form)
            @Html.Hidden("F_FormProperty_parent", Model.F_FormProperty_parent)
            @Html.Hidden("F_FormProperty_isBase", Model.F_FormProperty_isBase)                     
            @Html.Hidden("F_FormProperty_orderBy", Model.F_FormProperty_orderBy)
            @Html.Hidden("F_FormProperty_dataSource_type", Model.F_FormProperty_dataSource_type)     
            @Html.Hidden("F_FormProperty_dataSource", Model.F_FormProperty_dataSource)     
            @Html.Hidden("F_FormProperty_dataSource_mappingField", Model.F_FormProperty_dataSource_mappingField)  
            @Html.Hidden("F_FormProperty_dataSource_mappingFieldName", Model.F_FormProperty_dataSource_mappingFieldName)    
            @Html.Hidden("F_FormProperty_dataSource_conditionField", Model.F_FormProperty_dataSource_conditionField)     
            @Html.Hidden("F_FormProperty_dataSource_conditionValue", Model.F_FormProperty_dataSource_conditionValue)     
            @Html.Hidden("F_FormProperty_dataSource_conditionType", Model.F_FormProperty_dataSource_conditionType)                       
            @Html.Hidden("F_FormProperty_isDelete", Model.F_FormProperty_isDelete)            
            @Html.Hidden("F_FormProperty_creator", Model.F_FormProperty_creator)
            @Html.Hidden("F_FormProperty_createTime", Model.F_FormProperty_createTime)
         
            <div class="mulitytext"><label>显示名称</label>@Html.TextBox("F_FormProperty_showName", Model.F_FormProperty_showName, new { requiredInput = "请输入显示名称", maxlength = "50" })<i></i></div>
            <div class="mulitytext"><label>字段名称</label>@Html.TextBox("F_FormProperty_fieldName", Model.F_FormProperty_fieldName, new { requiredInput = "请输入字段名称", maxlength = "50" })<i class="warmPrompt">温馨提示：字段名称中不可以包括"_"(下划线)</i></div>
            <div class="mulitytext"><label>字段长度</label>@Html.TextBox("F_FormProperty_fieldLength", Model.F_FormProperty_fieldLength, new { requiredInput = "请输入字段长度", positiveInteger = "请输入有效数字", maxlength = "5" })<i></i></div>
            <div class="mulitytext"><label>默认值</label>@Html.TextBox("F_FormProperty_defaultValue", Model.F_FormProperty_defaultValue, new { maxlength = "50" })<i></i></div>
            <div class="mulitytext"><label>控件类型</label>
          @{
            IList<SelectListItem> uiTypeItems = new List<SelectListItem>();
            foreach (var uiControlType in UIControlTypes)
            {
                SelectListItem selectItem = new SelectListItem();
                selectItem.Value = uiControlType.C_Parameters_id.ToString();
                selectItem.Text = uiControlType.C_Parameters_name;

                uiTypeItems.Add(selectItem);
            }
            IList<SelectListItem> triggerEventTypesItems = new List<SelectListItem>();
            foreach (var triggerEventType in TriggerEventTypes)
            {
                SelectListItem selectItem = new SelectListItem();
                selectItem.Value = triggerEventType.C_Parameters_id.ToString();
                selectItem.Text = triggerEventType.C_Parameters_name;

                triggerEventTypesItems.Add(selectItem);
            }
           }
            @Html.DropDownList("F_FormProperty_uiType", uiTypeItems, new {})<i></i></div> 
            <div class="mulitytext"><label>是否显示</label>@Html.CheckBox("F_FormProperty_isShow", Model.F_FormProperty_isShow, new { })<i></i></div>
            <div class="mulitytext"><label>是否必填</label>@Html.CheckBox("F_FormProperty_isRequire", Model.F_FormProperty_isRequire, new { })<i></i></div>
            <div class="mulitytext"><label>是否只读</label>@Html.CheckBox("F_FormProperty_isOnlyRead", Model.F_FormProperty_isOnlyRead, new { })<i></i></div>
            <div class="mulitytext"><label>是否合计求和</label>@Html.CheckBox("F_FormProperty_isSum", Model.F_FormProperty_isSum, new { })<i></i></div>
            <div class="mulitytext"><label>是否显示在历史版本中</label>@Html.CheckBox("F_FormProperty_isShowInHistory", Model.F_FormProperty_isShowInHistory, new { })<i></i></div>
            <div class="mulitytext"><label>触发事件</label>@Html.DropDownList("F_FormProperty_triggerEvent_Type", triggerEventTypesItems, new { })<i></i></div>
            <div class="mulitytextarealonger"><label>动态事件Js</label>@Html.TextArea("F_FormProperty_triggerEvent_dynamicJs", Model.F_FormProperty_triggerEvent_dynamicJs, new { maxlength = "4000" })<i class="warmPrompt">温馨提示：最好采用压缩js,并且目前不支持"else if",但是可以用"if"替换(动态js与触发事件关联")</i></div>
            <div class="mulitytextarealonger"><label>其它验证信息</label>@Html.TextArea("F_FormProperty_validationMessage", Model.F_FormProperty_validationMessage, new { maxlength = "500" })<i class="warmPrompt">温馨提示：多个验证信息用"|"隔开，例如：money="请输入有效存款金额！"|positiveInteger="请输入有效年龄！"</i></div>
            <div class="mulitytextlonger"><label>目标链接</label>@Html.TextBox("F_FormProperty_targetUrl", Model.F_FormProperty_targetUrl, new { maxlength = "200" })<i></i></div>  
            <div class="mulitytextarealonger"><label>备注</label>@Html.TextArea("F_FormProperty_remark", Model.F_FormProperty_remark, new { onkeydown = "EnterPress(event)", maxlength = "500" })<i></i></div>

             <div class="buttonWrap clear"><label>&nbsp;</label><input name="" type="button" id="btnSave" onclick="onlySaveForm(this)" class="btn btnmr fl" value="确认保存" /><i></i><input name="" id="btnSaveAndNewNext" type="button" onclick="saveAndNewNext(this)" class="btn btnmr fl" value="保存并新增下一个" /><i></i></div>
        }
    </ul>
</div>