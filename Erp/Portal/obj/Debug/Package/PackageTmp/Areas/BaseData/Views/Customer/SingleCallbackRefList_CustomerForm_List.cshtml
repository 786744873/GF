@using CommonService.Model;
@model IEnumerable<CommonService.Model.C_Customer>
@{
    Layout = "~/Views/Shared/_ListSearchWithCallbackTemplate.cshtml";//包含回调方法的列表页面固定模板}
}
@{
    ViewBag.Title = "客户列表";
}

@{
    //这种类型带回，只能用于列表编辑页面中的单个带回
    C_Customer customerConditon = ViewBag.CustomerConditon;//客户条件模型
    string lookupGroup = ViewBag.Lookupgroup;
    string rebuildProperty = ViewBag.RebuildProperty;
    string mappingField = ViewBag.MappingField;//暂时不做处理
    string mappingFieldName = ViewBag.MappingFieldName;//暂时不做处理
    string code = "code_" + rebuildProperty;
    string name = "name_" + rebuildProperty;
}
@{
    List<CommonService.Model.C_Parameters> CustomerTypes = ViewBag.CustomerTypes;
    List<CommonService.Model.C_Parameters> CustomerSources = ViewBag.CustomerSources;
    List<CommonService.Model.C_Parameters> CustomerLevels = ViewBag.CustomerLevels;
    List<CommonService.Model.C_Parameters> IsSignedStates = ViewBag.IsSignedStates;
    List<CommonService.Model.C_Parameters> SignedStates = ViewBag.SignedStates;
    List<CommonService.Model.C_Parameters> CustomerLoyaltys = ViewBag.CustomerLoyaltys;
}
<div class="callback_list_tool">
    <div class="tools">
        <ul class="toolbar">
            <li><a target="ajaxtodo" singleoperate="singleoperate" href="javascript:window.parent.bringBack({callbackjson})"><span><img src="/theme/images/new_ok.png" /></span>确定</a></li>
        </ul>
        <ul class="seachform">
            @using (Html.BeginForm("SingleCallbackRefList_CustomerForm_List", "Customer", FormMethod.Post, new { id = ViewBag.SearchFormID, onsubmit = "return clickSearch(this);" }))
            {
                <input name="ThisPageIndex" class="ThisPageIndex" type="hidden" value="@ViewBag.ThisPageIndex" />
                <input name="IsExcutedFormSearch" class="IsExcutedFormSearch" type="hidden" value="@ViewBag.IsExcutedFormSearch" />
                <input type="hidden" name="lookupgroup" value="@lookupGroup" />
                <input type="hidden" name="rebuildProperty" value="@rebuildProperty" />              
                <li><label>客户名称</label>@Html.TextBox("C_Customer_name", customerConditon.C_Customer_name, new { @class = "scinput" })</li>
                <li><label>&nbsp;</label><input type="submit" class="scbtn" value="查询" /></li>

            }
        </ul>
    </div>
</div>

<table class="tablelist">
    <thead>
        <tr>
            @*<th>客户代码</th>*@
            <th>客户名称</th>
            <th>客户级别</th>
            <th>客户类型</th>
            <th>客户来源</th>
            <th>客户忠诚度</th>
            <th>专业顾问</th>
            <th>最后接触日期</th>
            <th>是否签约</th>
            <th>签约状态</th>
            <th>备注</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string callbackStr = "{'lookupgroup':'" + lookupGroup + "','" + code + "':'" + @item.C_Customer_code + "','" + name + "':'" + @item.C_Customer_name + "'}";
            <tr target="sid_Iterm" rel="@item.C_Customer_code" callbackjson="@callbackStr">
                @*<td>@item.C_Customer_number</td>*@
                <td>@item.C_Customer_name</td>
                @{
                     var customerLevel = CustomerLevels.Where(c => c.C_Parameters_id == item.C_Customer_level).FirstOrDefault();
                }
                @if (customerLevel != null)
                {
                    <td>@customerLevel.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
                    var customerType = CustomerTypes.Where(c => c.C_Parameters_id == item.C_Customer_type).FirstOrDefault();
                }
                @if (customerType != null)
                {
                    <td>@customerType.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
                   var customerSource = CustomerSources.Where(c => c.C_Parameters_id == item.C_Customer_source).FirstOrDefault();
                }
                @if (customerSource != null)
                {
                    <td>@customerSource.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
                    var customerLoyalty = CustomerLoyaltys.Where(c => c.C_Parameters_id == item.C_Customer_loyalty).FirstOrDefault();
                }
                @if (customerLoyalty != null)
                {
                    <td>@customerLoyalty.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                <td>@item.C_Customer_consultant_name</td>
                <td>@(item.C_Customer_lastContactDate == null ? "" : item.C_Customer_lastContactDate.Value.ToString("yyyy-MM-dd"))</td>
                @{
                   var issignedstate = IsSignedStates.Where(c => c.C_Parameters_id == item.C_Customer_isSignedState).FirstOrDefault();
                }
                @if (issignedstate != null)
                {
                    <td>@issignedstate.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
                   var signedstate = SignedStates.Where(c => c.C_Parameters_id == item.C_Customer_signedState).FirstOrDefault();
                }
                @if (signedstate != null)
                {
                    <td>@signedstate.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                <td>@item.C_Customer_remark</td>
            </tr>
        }
    </tbody>
</table>    