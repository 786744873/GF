@model CommonService.Model.C_Involved_projectUnit
@{
    Layout = "~/Views/Shared/_EditDialogFormTemplate.cshtml";//带表单提交的编辑页面固定模板
}
@{
    ViewBag.Title = "关联单位";
}
@{
    List<CommonService.Model.C_Parameters> ProjectUnit_type = ViewBag.projectUnit_type;
    List<CommonService.Model.C_Parameters> FundsSource = ViewBag.fundsSource;
    List<CommonService.Model.C_Parameters> ChargerOrgan = ViewBag.chargerOrgan;
    List<CommonService.Model.C_Parameters> Process = ViewBag.process;
    List<CommonService.Model.C_Parameters> LossOrProfit = ViewBag.lossOrProfit;
    List<CommonService.Model.C_Parameters> LossReason = ViewBag.lossReason;
}
@section HeadScript{
    <script type="text/javascript">
        document.onkeyup = function (e) {      //onkeyup是javascript的一个事件、当按下某个键弹起 var _key; //的时触发 
            if (e == null) { // ie  
                _key = event.keyCode;
            } else { // firefox              //获取你按下键的keyCode  
                _key = e.which;          //每个键的keyCode是不一样的  
            }
            if (_key == 13) {   //判断keyCode是否是13，也就是回车键(回车的keyCode是13)  
                onlySaveForm(document.getElementById('btnSave'));
            }
        }
    </script>
}
<div class="formbody">
    <div class="formtitle"><span>基本信息</span></div>
    <ul class="forminfo">
        @using (Html.BeginForm("Save", "Involved_projectUnit", FormMethod.Post, new { id = "formInvolved_project", onsubmit = "return validateCallback(this,dialogAjaxDone);" }))
        {
            @Html.Hidden("formOperateType")//表单操作类型：固定写法，只是保存，值为'onlySave';保存并且新增，值为'saveAndNewNext'
            @Html.Hidden("C_Involved_projectUnit_id", Model.C_Involved_projectUnit_id)
            @Html.Hidden("C_Involved_projectUnit_code", Model.C_Involved_projectUnit_code)
            @Html.Hidden("C_Involved_project_code", Model.C_Involved_project_code)
            @Html.Hidden("C_Involved_projectUnit_creator", Model.C_Involved_projectUnit_creator)
            @Html.Hidden("C_Involved_projectUnit_createTime", Model.C_Involved_projectUnit_createTime)
            @Html.Hidden("C_Involved_projectUnit_isDelete", Model.C_Involved_projectUnit_isDelete)
            @Html.Hidden("C_Involved_projectUnit_charger", Model.C_Involved_projectUnit_charger)
            <div class="mulitytext"><label>工程子项目</label>@Html.TextBox("C_Involved_projectUnit_Child", Model.C_Involved_projectUnit_Child, new { @class = "dfinput", requiredInput = "请输入项目名称", maxlength = "200" })<i></i></div>
            <div class="mulitytext"><label>投标单位</label>@Html.Hidden("rivallookup.Code", Model.C_Involved_projectUnit_rival, new { lookupgroup = "rivallookup" })@Html.Hidden("rivallookup.Type", Model.C_Involved_projectUnit_rival_type, new { lookupgroup = "rivallookup" })@Html.TextBox("rivallookup.Name", Model.C_Involved_projectUnit_rivalname, new { maxlength = "200", @readonly = "readonly", selectdialog = "selectdialog", @class = "textselect", title = "单选单位", requiredInput = "请选择单位名称", switchurl = "/baseData/rival/SingleListTabDetails", dialogwidth = "1240", dialogheight = "580", lookupgroup = "rivallookup" })<i></i></div>
             <div class="mulitytext">
                <label>承包形式</label>
                @{
                IList<SelectListItem> projectUnit_typeItems = new List<SelectListItem>();
                foreach (var projectUnit_type in ProjectUnit_type)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = projectUnit_type.C_Parameters_id.ToString();
                    selectItem.Text = projectUnit_type.C_Parameters_name;

                    projectUnit_typeItems.Add(selectItem);
                }
                }
                @Html.DropDownList("C_Involved_projectUnit_type", projectUnit_typeItems, new { }) <i></i></div>
            <div class="mulitytext">
                <label>资金来源</label>
                @{
                IList<SelectListItem> fundsSourceItems = new List<SelectListItem>();
                foreach (var fundsSource in FundsSource)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = fundsSource.C_Parameters_id.ToString();
                    selectItem.Text = fundsSource.C_Parameters_name;

                    fundsSourceItems.Add(selectItem);
                }
                }
                @Html.DropDownList("C_Involved_projectUnit_fundsSource", fundsSourceItems, new { }) <i></i></div>
             <div class="mulitytext"><label>负责人名称</label>@Html.Hidden("contactslookup.Code", "", new { lookupgroup = "contactslookup" })@Html.TextBox("contactslookup.Name", Model.C_Involved_projectUnit_chargername, new { maxlength = "200", @readonly = "readonly", selectdialog = "selectdialog", @class = "textselect", title = "单选负责人", requiredInput = "请选择负责人名称", switchurl = "/baseData/contacts/SingleCallbackRefList", dialogwidth = "1240", dialogheight = "530", lookupgroup = "contactslookup" })<i></i></div>
             <div class="mulitytext"><label>身份定位</label>@Html.TextBox("C_Involved_projectUnit_chargerIdentity", Model.C_Involved_projectUnit_chargerIdentity, new { @class = "dfinput", maxlength = "200" })<i></i></div>
            <div class="mulitytext">
                <label>组织形式</label>
                @{
                IList<SelectListItem> chargerOrganItems = new List<SelectListItem>();
                foreach (var chargerOrgan in ChargerOrgan)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = chargerOrgan.C_Parameters_id.ToString();
                    selectItem.Text = chargerOrgan.C_Parameters_name;

                    chargerOrganItems.Add(selectItem);
                }
                }
                @Html.DropDownList("C_Involved_projectUnit_chargerOrgan", chargerOrganItems, new { }) <i></i></div>
             <div class="mulitytext">
                <label>负责人资金来源</label>
                @{
                IList<SelectListItem> cfundsSourceItems = new List<SelectListItem>();
                foreach (var fundsSource in FundsSource)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = fundsSource.C_Parameters_id.ToString();
                    selectItem.Text = fundsSource.C_Parameters_name;

                    cfundsSourceItems.Add(selectItem);
                }
                }
                @Html.DropDownList("C_Involved_projectUnit_chargerFundsSource", cfundsSourceItems, new { }) <i></i></div>
            <div class="mulitytext"><label>实际开工时间</label>@Html.TextBox("C_Involved_projectUnit_startTime", Model.C_Involved_projectUnit_startTime == null ? "" : Model.C_Involved_projectUnit_startTime.Value.ToString("yyyy-MM-dd"), new { date = "date", maxlength = "20", @readonly = "readonly", dateformat = "yyyy-MM-dd" })<i></i></div>
             <div class="mulitytext"><label>竣工验收时间</label>@Html.TextBox("C_Involved_projectUnit_acceptanceTime", Model.C_Involved_projectUnit_acceptanceTime == null ? "" : Model.C_Involved_projectUnit_acceptanceTime.Value.ToString("yyyy-MM-dd"), new { date = "date", maxlength = "20", @readonly = "readonly", dateformat = "yyyy-MM-dd" })<i></i></div>
             <div class="mulitytext"><label>工程进度</label>
                 @{
                IList<SelectListItem> processItems = new List<SelectListItem>();
                foreach (var process in Process)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = process.C_Parameters_id.ToString();
                    selectItem.Text = process.C_Parameters_name;

                    processItems.Add(selectItem);
                }
                 }
                 @Html.DropDownList("C_Involved_projectUnit_process", processItems, new { }) <i></i></div>
            <div class="mulitytext"><label>施工安全事故</label>@Html.TextBox("C_Involved_projectUnit_accidents", Model.C_Involved_projectUnit_accidents, new { @class = "dfinput", maxlength = "200" })<i></i></div>
            <div class="mulitytext"><label>施工质量事故</label>@Html.TextBox("C_Involved_projectUnit_qualityAccidents", Model.C_Involved_projectUnit_qualityAccidents, new { @class = "dfinput", maxlength = "200" })<i></i></div>
            <div class="mulitytext"><label>工程涉诉情况</label>@Html.TextBox("C_Involved_projectUnit_litigation", Model.C_Involved_projectUnit_litigation, new { @class = "dfinput", maxlength = "200" })<i></i></div>
             <div class="mulitytext"><label>实际负责人盈亏</label>
                 @{
                IList<SelectListItem> lossOrProfitItems = new List<SelectListItem>();
                foreach (var lossOrProfit in LossOrProfit)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = lossOrProfit.C_Parameters_id.ToString();
                    selectItem.Text = lossOrProfit.C_Parameters_name;

                    lossOrProfitItems.Add(selectItem);
                }
                 }
                 @Html.DropDownList("C_Involved_projectUnit_lossOrProfit", lossOrProfitItems, new { }) <i></i></div>
            <div class="mulitytext"><label>亏损原因</label>
                 @{
                IList<SelectListItem> lossReasonItems = new List<SelectListItem>();
                foreach (var lossReason in LossReason)
                {
                    SelectListItem selectItem = new SelectListItem();
                    selectItem.Value = lossReason.C_Parameters_id.ToString();
                    selectItem.Text = lossReason.C_Parameters_name;

                    lossReasonItems.Add(selectItem);
                }
                 }
                 @Html.DropDownList("C_Involved_projectUnit_lossReason", lossReasonItems) <i></i></div>
              <div class="buttonWrap clear"><label>&nbsp;</label><input name="" type="button" id="btnSave" onclick="onlySaveForm(this)" class="btn btnmr fl" value="确认保存" /><i></i><input name="" id="btnSaveAndNewNext" type="button" onclick="saveAndNewNext(this)" class="btn btnmr fl" value="保存并新增下一个" /><i></i></div>
        }
    </ul>
</div>