@using System.Data;
@using CommonService.Common;
@model IEnumerable<CommonService.Model.CustomerForm.F_FormProperty>
@{
    Layout = "~/Views/Shared/_ListSearchWithDialogTemplate.cshtml";//带表单查询的列表页面固定模板
}
@{
    ViewBag.Title = "还原单";
}
@{
    DataSet DynamicItemFormPropertyValues = ViewBag.DynamicItemFormPropertyValues;//动态明细表单属性值
    CommonService.Model.CustomerForm.F_Form formcon = ViewBag.formCon;
}
@{
    var itemGourp = Model.Where(p => p.F_FormProperty_uiType == Convert.ToInt32(UiControlType.普通子表));//明细组(这个自定义列表在此页面功能中实际上只允许有一个明细组，否则会出错)
}
@{
    //查询条件
}
@{
    //参数
    List<CommonService.Model.C_Parameters> FeeTypes = ViewBag.FeeTypes;
    List<CommonService.Model.C_Parameters> InvoiceType = ViewBag.InvoiceType;
    List<CommonService.Model.C_Parameters> PayStatus = ViewBag.PayStatus;
    List<CommonService.Model.FlowManager.P_Flow> casestage = ViewBag.casestage;
    List<CommonService.Model.CaseManager.B_Case> caseList = ViewBag.caseList;
}
@{
    string propertyValue = String.Empty;//属性值
}

@foreach (var group in itemGourp)
{
    <div style="height:450px;overflow-y:auto;">
        <table class="tablelist">
            <thead>
                <tr>
                    @{
    var groupItems = Model.Where(p => p.F_FormProperty_parent == group.F_FormProperty_code);
                    }
                    @foreach (var groupItem in groupItems)
                {
                     if (groupItem.F_FormProperty_showName == "老ID" || groupItem.F_FormProperty_showName=="分摊案件数")
                     {

                     }else if (groupItem.F_FormProperty_showName == "编号")
                     {
                        <th width="4%">@groupItem.F_FormProperty_showName</th>
                     }
                     else if (groupItem.F_FormProperty_showName == "摘要")
                     {
                        <th width="10%">@groupItem.F_FormProperty_showName</th>
                     }
                     else if (groupItem.F_FormProperty_showName == "费用产生日期")
                     {
                        <th width="10%">@groupItem.F_FormProperty_showName</th>
                     }
                     else if (groupItem.F_FormProperty_showName == "费用种类")
                    {
                        <th width="8%">@groupItem.F_FormProperty_showName</th>
                    }
                    else if (groupItem.F_FormProperty_showName == "发票种类")
                    {
                        <th width="8%">@groupItem.F_FormProperty_showName</th>
                    }
                     else if (groupItem.F_FormProperty_showName == "付款状态")
                    {
                        <th width="8%">@groupItem.F_FormProperty_showName</th>
                    }
                    else
                     {
                         <th width="8%">@groupItem.F_FormProperty_showName</th>
                     }
                }
                    <th width="8%">申请状态</th>
                    <th width="10%">业务流程</th>
                    <th width="5%">案号</th>
                    <th width="5%">申请人</th>
                    <th width="8%">申请时间</th>
                </tr>
            </thead>
            <tbody>
                @for (int j = 0; j < DynamicItemFormPropertyValues.Tables.Count; j++)
            {//这个地方的业务逻辑都为处理加载列表表单属性值
                DataTable dt = DynamicItemFormPropertyValues.Tables[j];
                bool isThisTable = false;//是否为普通子表属性关联table
                int columnCount = 0;//table 列数量
                foreach (var groupItem in groupItems)
                {
                    if (dt.Columns.Contains(groupItem.F_FormProperty_code.Value.ToString().ToUpper()))
                    {
                        isThisTable = true;
                        columnCount = dt.Columns.Count;
                        break;
                    }
                }
                if (isThisTable)
                {
                    int rowIndex = 0;//行索引号
                    foreach (DataRow dr in dt.Rows)
                    {
            <tr target="sid_Iterm" rel="@dr["formPropertyValueGroup"].ToString()">
                @foreach (var groupItem in groupItems)
                            {
                                propertyValue = dr[groupItem.F_FormProperty_code.Value.ToString().ToUpper()].ToString();
                                switch (groupItem.F_FormProperty_uiType.Value)
                                {
                                    case 133://下拉框
                                        if (!String.IsNullOrEmpty(groupItem.F_FormProperty_dataSource_conditionValue))
                                        {
                                            if (Convert.ToInt32(CustomerFormEnum.费用种类) == Convert.ToInt32(groupItem.F_FormProperty_dataSource_conditionValue))
                                            {
                                                var feeType = FeeTypes.Where(c => c.C_Parameters_id.ToString() == propertyValue).FirstOrDefault();
                                                if (feeType != null)
                                                {
                                                    <td>@feeType.C_Parameters_name</td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                            }
                                            else if (Convert.ToInt32(CustomerFormEnum.付款状态) == Convert.ToInt32(groupItem.F_FormProperty_dataSource_conditionValue))
                                            {
                                                var payStatus = PayStatus.Where(c => c.C_Parameters_id.ToString() == propertyValue).FirstOrDefault();
                                                if (payStatus != null)
                                                {
                                                    <td>@payStatus.C_Parameters_name</td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                            }
                                            else
                                            {
                                                <td></td>
                                            }
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        break;
                                        case 682://联动下拉框
                                        var invoiceType = InvoiceType.Where(c => c.C_Parameters_id.ToString() == propertyValue).FirstOrDefault();
                                        if (invoiceType != null)
                                        {
                                            <td>@invoiceType.C_Parameters_name</td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        break;
                                    default:
                                        if (groupItem.F_FormProperty_showName == "老ID" || groupItem.F_FormProperty_showName == "分摊案件数")
                                         {

                                         }else
                                        {
                                             if(groupItem.F_FormProperty_showName =="发票金额" || groupItem.F_FormProperty_showName =="分摊金额")
                                             {
                                                <td>@(propertyValue == "" ? propertyValue : Convert.ToDecimal(propertyValue).ToString("0.00"))</td>
                                             }
                                             else {
                                                <td>@propertyValue</td>
                                            }
                                        }
                                        break;
                                }
                            }
                            <td>@dr["O_Form_applyStatus_name"].ToString()</td>
                            <td>@dr["P_Business_flow_name"].ToString()</td>
                            @{
                                        var fkCode = dr["P_Fk_code"].ToString();
                                        fkCode = fkCode == "" ? Guid.Empty.ToString() : fkCode;
                                        var bcase = caseList.Where(c => c.B_Case_code == new Guid(fkCode)).FirstOrDefault();
                            }
                            @if (bcase != null)
                            {
                            <td>@bcase.B_Case_number</td>
                            }
                            else
                            {
                            <td></td>
                            }
                            <td>@dr["O_Form_applyPerson_name"].ToString()</td>
                            <td>@dr["O_Form_applyTime"].ToString()</td>
                        </tr>
                            rowIndex++;
                    }
                }
            }
            </tbody>
        </table>
    </div>
}