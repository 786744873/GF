@using CommonService.Model;
@using Context;
@model IEnumerable<CommonService.Model.C_Customer>
@{
    Layout = "~/Views/Shared/_ListSearchWithCallbackTemplate.cshtml";//包含回调方法的列表页面固定模板
}
@{
    ViewBag.Title = "客户列表";
}

@{
    C_Customer customerConditon = ViewBag.CustomerConditon;//客户条件模型
    int bussinessType = ViewBag.BussinessType;
    string Customer_customercodes = ViewBag.Customer_customercodes;
}
@{
    List<CommonService.Model.C_Parameters> CustomerTypes = ViewBag.CustomerTypes;
    List<CommonService.Model.C_Parameters> CustomerSources = ViewBag.CustomerSources;
    List<CommonService.Model.C_Parameters> CustomerLevels = ViewBag.CustomerLevels;
    List<CommonService.Model.C_Parameters> IsSignedStates = ViewBag.IsSignedStates;
    List<CommonService.Model.C_Parameters> SignedStates = ViewBag.SignedStates;
    List<CommonService.Model.C_Parameters> CustomerLoyaltys = ViewBag.CustomerLoyaltys;
}
@section HeadScript{
    <script type="text/javascript">
        function seachUser(thisObj) {
            var isChecked = 1;
            var aa = $("#allChecked");//.attr("checked");
            var isChecked = "";
            if (aa.is(':checked')) {
                isChecked = 1;
            } else {
                isChecked = 0;
            }
            $("#isChecked").val(isChecked);
            $(thisObj).parents('form').submit();
        }
        function confirmCheck() {

            var aa = $("#allChecked");//.attr("checked");
            var isChecked = "";
            if (aa.is(':checked')) {
                isChecked = 1;
            } else {
                isChecked = 0;
            }
            $("#isChecked").val(isChecked);
            $("#formSubmit").parents('form').submit();



        }
        $(function () {

           
            //$("#allChecked").click(function () {
            //    if (this.checked) {
            //        $(".tablelist :checkbox").prop("checked", true);
            //    } else {
            //        $(".tablelist :checkbox").prop("checked", false);
            //    }
            //});
            $("table.tablelist tr").slice(1).each(function () {//slice(1)表示排除第一行---表头
                var p = this;
                $(this).children().slice(1).click(function () {
                    $($(p).children()[0]).children().each(function () {//$(p).children()[0]表示第一列
                        if (this.type == "checkbox") {
                            if (!this.checked) this.checked = true;
                            else this.checked = false;
                        }
                    });
                });
            });
        })
        /// <summary>
        /// 点击行选中或者取消CheckBox
        /// </summary>
        function Set_CheckBoxCheckTr() {

        }

    </script>
}
<div class="callback_list_tool">
    <div class="tools">
        @if(!UIContext.Current.IsPreSetManager)
        { 
            <ul style="float:left;height:35px;line-height:35px;">
                @{
                    if (ViewBag.ischeck == "0") {             
                        <li><input id="allChecked" type="checkbox" onclick="confirmCheck()" value="" /><label style="margin-left:5px;">仅查看本区域人员</label> </li>
                    } 
                    else { 
                        <li><input id="allChecked" type="checkbox" onclick="confirmCheck()" checked="checked" value="" /><label style="margin-left:5px;">仅查看本区域人员</label> </li>
                    }
                }
            </ul>
        }
        <ul class="toolbar">
            @*<li><a href="formSubmit();"><span><img src="/theme/images/new_search.png" /></span>查询</a></li>*@
            <li><a target="ajaxtodo" mulityoperate="mulityoperate" href="javascript:window.parent.mulityBringBack({callbackjson})"><span><img src="/theme/images/new_ok.png" /></span>确定</a></li>
        </ul>
        @using (Html.BeginForm("MulityCallbackRefList", "Customer", FormMethod.Post, new { id = ViewBag.SearchFormID, onsubmit = "return clickSearch(this);" }))
        {
            <ul class="seachform">
                <input name="ThisPageIndex" class="ThisPageIndex" type="hidden" value="@ViewBag.ThisPageIndex" />
                <input name="IsExcutedFormSearch" class="IsExcutedFormSearch" type="hidden" value="@ViewBag.IsExcutedFormSearch" />
                <input type="hidden" name="customerCodes" value="@ViewBag.customerCodes" />
                @Html.Hidden("C_Customer_businessType", bussinessType)
                @Html.Hidden("C_Customer_codes", Customer_customercodes)
                @Html.Hidden("isChecked", "1")
                <li><label>名称</label>@Html.TextBox("C_Customer_name", customerConditon.C_Customer_name, new { @class = "scinput" })</li>
                <li><label>&nbsp;</label><input type="button" id="formSubmit" onclick="seachUser(this)" class="scbtn" onclick="seachUser()" value="查询" /></li>
            </ul>
        }
    </div>
</div>
<table class="tablelist">
    <thead>
        @{
            string defaultJsonStr = "";//默认带回json串,hety,2015-09-18,这种情况情况应用于没有选中任何记录时的带回,相当于清空
            switch (bussinessType)
            {
                case 81://客户
                    defaultJsonStr = "{'mulitylookupgroup':'customermulitylookup','Code':'','Name':''}";
                    break;
                case 82://委托人
                    defaultJsonStr = "{'mulitylookupgroup':'clientmulitylookup','Code':'','Name':''}";
                    break;
            }
        }
        <tr callbackjson="@defaultJsonStr">
            <th><input id="allChecked" type="checkbox" mulitycheck="mulitycheck" value=""></th>
            @*<th>@(bussinessType == 81 ? "客户代码" : "委托人代码")</th>*@
            <th>@(bussinessType == 81 ? "客户名称" : "委托人名称")</th>
            <th>@(bussinessType == 81 ? "客户级别" : "委托人级别")</th>
            <th>@(bussinessType == 81 ? "客户类型" : "委托人类型")</th>
            <th>@(bussinessType == 81 ? "客户来源" : "委托人来源")</th>
            <th>@(bussinessType == 81 ? "客户忠诚度" : "委托人忠诚度")</th>
            <th>专业顾问</th>
            <th>最后接触日期</th>
            <th>是否签约</th>
            <th>签约状态</th>
            <th>备注</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string jsonStr = "";
            switch (bussinessType)
            {
                case 81://客户
                    jsonStr = "{'mulitylookupgroup':'customermulitylookup','Code':'" + @item.C_Customer_code + "','Name':'" + @item.C_Customer_name + "'}";
                    break;
                case 82://委托人
                    jsonStr = "{'mulitylookupgroup':'clientmulitylookup','Code':'" + @item.C_Customer_code + "','Name':'" + @item.C_Customer_name + "'}";
                    break;
            }
            <tr target="sid_Iterm" rel="@item.C_Customer_code" callbackjson="@jsonStr">
                @if (ViewBag.checkedCustomerCodes != null && ViewBag.checkedCustomerCodes.Contains(item.C_Customer_code.ToString()))
                {
                    <td width="35px"><input operate="operate" type="checkbox" ></td>
                }
                else
                {
                    <td width="35px"><input operate="operate" type="checkbox"></td>
                }
                @*<td>@item.C_Customer_number</td>*@
                <td title="@item.C_Customer_name">@Maticsoft.Common.Cutout.Cut(item.C_Customer_name, 20)</td>
                @{
            var customerLevel = CustomerLevels.Where(c => c.C_Parameters_id == item.C_Customer_level).FirstOrDefault();
                }
                @if (customerLevel != null)
                {
                    <td>@customerLevel.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
            var customerType = CustomerTypes.Where(c => c.C_Parameters_id == item.C_Customer_type).FirstOrDefault();
                }
                @if (customerType != null)
                {
                    <td title="@customerType.C_Parameters_name">@Maticsoft.Common.Cutout.Cut(customerType.C_Parameters_name, 10)</td>
                }
                else
                {
                    <td></td>
                }
                @{
            var customerSource = CustomerSources.Where(c => c.C_Parameters_id == item.C_Customer_source).FirstOrDefault();
                }
                @if (customerSource != null)
                {
                    <td>@customerSource.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
            var customerLoyalty = CustomerLoyaltys.Where(c => c.C_Parameters_id == item.C_Customer_loyalty).FirstOrDefault();
                }
                @if (customerLoyalty != null)
                {
                    <td>@customerLoyalty.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                <td>@item.C_Customer_consultant_name</td>
                <td>@(item.C_Customer_lastContactDate == null ? "" : item.C_Customer_lastContactDate.Value.ToString("yyyy-MM-dd"))</td>
                @{
            var issignedstate = IsSignedStates.Where(c => c.C_Parameters_id == item.C_Customer_isSignedState).FirstOrDefault();
                }
                @if (issignedstate != null)
                {
                    <td>@issignedstate.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                @{
            var signedstate = SignedStates.Where(c => c.C_Parameters_id == item.C_Customer_signedState).FirstOrDefault();
                }
                @if (signedstate != null)
                {
                    <td>@signedstate.C_Parameters_name</td>
                }
                else
                {
                    <td></td>
                }
                <td title="@item.C_Customer_remark">@Maticsoft.Common.Cutout.Cut(item.C_Customer_remark, 10)</td>
            </tr>
        }
    </tbody>
</table>
