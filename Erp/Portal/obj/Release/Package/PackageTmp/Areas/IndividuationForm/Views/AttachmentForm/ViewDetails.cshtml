@using System.Data;
@using CommonService.Common;
@using Context;
@model IEnumerable<CommonService.Model.CustomerForm.F_FormProperty>
@{
    Layout = "~/Views/Shared/_NoPageListTemplate.cshtml";//无分页列表页面固定模板
}
@{
    ViewBag.Title = "附件表单列表";
}
@{
    DataSet DynamicItemFormPropertyValues = ViewBag.DynamicItemFormPropertyValues;//动态明细表单属性值
    CommonService.Model.CustomerForm.F_Form formcon = ViewBag.formCon;
}
@{
    var itemGourp = Model.Where(p => p.F_FormProperty_uiType == Convert.ToInt32(UiControlType.普通子表));//明细组(这个自定义列表在此页面功能中实际上只允许有一个明细组，否则会出错)
} 
@{
    string propertyValue = String.Empty;//属性值
    string tempPropertyValue = String.Empty;
}

@foreach (var group in itemGourp)
{
    <table class="tablelist">
        <thead>
            <tr>                
                @{
                    var groupItems = Model.Where(p => p.F_FormProperty_parent == group.F_FormProperty_code);
                }
                @foreach (var groupItem in groupItems)
                {
                    //if (!groupItem.F_FormProperty_isShow)
                    //{
                    //    continue;
                    //}
                    <th>@groupItem.F_FormProperty_showName</th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int j = 0; j < DynamicItemFormPropertyValues.Tables.Count; j++)
            {//这个地方的业务逻辑都为处理加载列表表单属性值
                DataTable dt = DynamicItemFormPropertyValues.Tables[j];
                bool isThisTable = false;//是否为普通子表属性关联table
                int columnCount = 0;//table 列数量
                foreach (var groupItem in groupItems)
                {
                    if (dt.Columns.Contains(groupItem.F_FormProperty_code.Value.ToString().ToUpper()))
                    {
                        isThisTable = true;
                        columnCount = dt.Columns.Count;
                        break;
                    }
                }
                if (isThisTable)
                {
                    int rowIndex = 0;//行索引号
                    foreach (DataRow dr in dt.Rows)
                    {
                        <tr target="sid_Iterm">
                            @foreach (var groupItem in groupItems)
                            {
                                if (!groupItem.F_FormProperty_isShow)
                                {
                                    continue;
                                }
                                
                                propertyValue = String.Empty;
                                tempPropertyValue = String.Empty;

                                tempPropertyValue = dr[groupItem.F_FormProperty_code.Value.ToString().ToUpper()].ToString();
                                if (!String.IsNullOrEmpty(tempPropertyValue))
                                {
                                    if (tempPropertyValue.Substring(0, 1) == "[")
                                    {
                                        tempPropertyValue = tempPropertyValue.Substring(1, tempPropertyValue.Length - 1);
                                        int charIndex = tempPropertyValue.IndexOf(']');                                     
                                        propertyValue = tempPropertyValue.Substring(charIndex + 1, tempPropertyValue.Length - charIndex - 1);
                                    }
                                }

                                if(groupItem.F_FormProperty_uiType == Convert.ToInt32(UiControlType.超链接))
                                {//获取超链接下的连接
                                    tempPropertyValue = dr["38f7af1a-e0b8-4f8b-ae1b-7584065ca31b"].ToString();
                                    if (!String.IsNullOrEmpty(tempPropertyValue))
                                    {
                                        if (tempPropertyValue.Substring(0, 1) == "[")
                                        {
                                            tempPropertyValue = tempPropertyValue.Substring(1, tempPropertyValue.Length - 1);
                                            int charIndex = tempPropertyValue.IndexOf(']');
                                            propertyValue = tempPropertyValue.Substring(charIndex + 1, tempPropertyValue.Length - charIndex - 1);
                                        }
                                    }             
                                    string link = "/upload/" + propertyValue;
                                    <td><a href="@link" target="_blank">@propertyValue</td>
                                }
                                else { 
                                   <td>@propertyValue</td> 
                                }                                
                            }
                        </tr>
                        rowIndex++;
                    }
                }
            }
        </tbody>
    </table>
}